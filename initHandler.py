import os
from datetime import datetime as dt
from SAPOFTO import SAPOFTO

def init(args):
    # print ascii art
    # looks messed up in .py src cause you have to escape the escapes
    # aka M-x replace-string \ --> \\ -->
    print("""
      ___           ___           ___     
     /\\__\\         /\\__\\         /\\  \\    
    /::|  |       /:/ _/_       /::\\  \\   
   /:|:|  |      /:/ /\\__\\     /:/\\:\\  \\  
  /:/|:|  |__   /:/ /:/ _/_   /::\\~\\:\\__\\ 
 /:/ |:| /\\__\\ /:/_/:/ /\\__\\ /:/\\:\\ \\:|__|
 \\/__|:|/:/  / \\:\\/:/ /:/  / \\:\\~\\:\\/:/  /
     |:/:/  /   \\::/_/:/  /   \\:\\ \\::/  / 
     |::/  /     \\:\\/:/  /     \\:\\/:/  /  
     /:/  /       \\::/  /       \\::/__/   
     \\/__/         \\/__/         ~~       
      ___           ___           ___     
     /\\  \\         /\\  \\         /\\  \\    
    /::\\  \\       /::\\  \\       /::\\  \\   
   /:/\\:\\  \\     /:/\\:\\  \\     /:/\\:\\  \\  
  /:/  \\:\\  \\   /::\\~\\:\\  \\   /:/  \\:\\  \\ 
 /:/__/ \\:\\__\\ /:/\\:\\ \\:\\__\\ /:/__/_\\:\\__\\
 \\:\\  \\ /:/  / \\/_|::\\/:/  / \\:\\  /\\ \\/__/
  \\:\\  /:/  /     |:|::/  /   \\:\\ \\:\\__\\  
   \\:\\/:/  /      |:|\\/__/     \\:\\/:/  /  
    \\::/  /       |:|  |        \\::/  /   
     \\/__/         \\|__|         \\/__/
      ___        ___            ___     
     /\\__\\      /\\  \\          /\\  \\    
    /:/  /     /::\\  \\        /::\\  \\   
   /:/  /     /:/\\:\\  \\      /:/\\:\\  \\  
  /:/  /     /::\\~\\:\\  \\    /::\\~\\:\\__\\ 
 /:/__/     /:/\\:\\ \\:\\__\\  /:/\\:\\ \\:|__|
 \\:\\  \\     \\/__\\:\\/:/   / \\:\\~\\:\\/:/  /
  \\:\\  \\         \\::/  /    \\:\\ \\::/  / 
   \\:\\  \\        /:/  /      \\:\\/:/  /  
    \\:\\__\\      /:/  /        \\::/__/   
     \\/__/      \\/__/          ~~       


       		   		   v0.0.1""")
    
    tab = '    '
    half_tab = '  '

    print('args')
    if os.path.isfile('.nwborglab.org'):
        print('ERROR: This directory is already the root of an nwborg project.')
        return

    # TODO fill out the .nwborg
    init_org = SAPOFTO('.nwborglab')

    init_org.appendLine('nwb first initialized ' + str(dt.now()))
    session_imports = init_org.constructAndAddChild('SESSION IMPORTS')
    session_imports.tagAsSourceCode()            
    session_imports.appendLine("import pynwb")
    session_imports.appendLine("import os")
    session_imports.appendLine("import argparse")
    session_imports.appendLine("from orgutils import SAPOFTO")
    session_imports.appendLine("from pynwb import NWBHDF5IO")
    session_imports.appendLine("from pynwb import NWBFile")
    session_imports.appendLine("from datetime import datetime")

    session_header = init_org.constructAndAddChild('SESSION HEADER')
    session_header.tagAsSourceCode()
    session_header.appendLine("#!!! This file was automatically generated by nwborg !!!")
    session_header.appendLine("# Code generated primarily from the parsing of: ")
    session_header.appendLine("#   - sessionskeletons.org")

    session_header.appendLine("def main():")
    session_header.appendLine("nwborg_root_path = '/'.join(os.path.dirname(os.path.realpath(__file__)).split('/')[:-2])+'/'",1)
    session_header.appendLine("overview = SAPOFTO(filename=os.path.join(nwborg_root_path,'overview.org'))",1)
    session_header.appendLine("skeleton = SAPOFTO(filename=os.path.join(nwborg_root_path,'sessionskeletons.org'))['%-%-%SESSION_ARCHETYPE%-%-%']",1)
    session_header.appendLine("parser = argparse.ArgumentParser('Default parser generated automatically by nwborg')",1)
    session_header.appendLine("parser.add_argument('--session-id',type=str,default=-1,help='id for the session being run')",1)
    session_header.appendLine("args,unknown = parser.parse_known_args()",1)
    session_header.appendLine("session_id = args.session_id",1)
    session_header.appendLine("session_path = nwborg_root_path + 'sessions/%-%-%SESSION_ARCHETYPE%-%-%/' + session_id + '/'",1)
    session_header.appendLine("nwbfile = NWBFile(session_description=skeleton['description'],identifier=session_id,session_start_time=datetime.now(),file_create_date=datetime.today())",1)
    session_header.appendLine("print('nwborg root path: ', nwborg_root_path)",1)
    session_header.appendLine("session_dict = orgutils.orgToDict(filename=session_path+'session.org')", 1) # pick it up

    init_org.writeToFile()

    # overview.org    
    if not os.path.isfile('overview.org'):
        print('generating overview.org...')
        overview = SAPOFTO('overview')
        overview.addChild(SAPOFTO('experiment abstract', 'this is where you can write about your experiment\'s abstract'))
        overview.addChild(SAPOFTO('experiment contributors', 'write down the names of your research contributors here'))
        overview.addChild(SAPOFTO('lab', 'this is where you can specify which lab your experiment is affiliated with'))
        overview.addChild(SAPOFTO('experiment results', 'This is where you can record the big picture results of your experiment'))
        overview.writeToFile()

        print('complete.')
    else:
        print('found overview.org...')
    
    # sessionSkeletons.org
    if not os.path.isfile('sessionskeletons.org'):
        print('generating sessionskeletons.org...')
        sessionskeletons = SAPOFTO('sessionskeletons')
        sessionskeletons.addChild(SAPOFTO('example skeleton', 'this is an example of a session skeleton. An actual session skeleton one should have a descriptive name in place of "* EXAMPLE SKELETON" this will be used to identify the session in code'))
        example_skeleton = sessionskeletons['EXAMPLE SKELETON']
        example_skeleton.addChild(SAPOFTO('SUBJECT ROLES', 'write down the names of your research contributors here'))
        example_skeleton['SUBJECT ROLES'].addChild(SAPOFTO('EXAMPLE ROLE'))
        example_skeleton['SUBJECT ROLES'].addChild(SAPOFTO('EXAMPLE ROLE'))
        example_skeleton['SUBJECT ROLES']['EXAMPLE ROLE'].addChild(SAPOFTO('STIMULI'))
        example_skeleton['SUBJECT ROLES']['EXAMPLE ROLE'].addChild(SAPOFTO('SENSORS'))
        example_skeleton['SUBJECT ROLES']['EXAMPLE ROLE'].addChild(SAPOFTO('SURVEY'))
        example_skeleton['SUBJECT ROLES']['EXAMPLE ROLE'].addChild(SAPOFTO('OTHER NOTES'))
        sessionskeletons.writeToFile()
        print('complete.')
    else:
        print('found sessionSkeletons.org...')



    # TODO make .nwb.org in each subdirectory
    # and make root path a variable accessible in the project no matter where you are at
    # make directories if necessary
    if not os.path.isdir('subjects'):
        print('creating subjects directory...')
        os.mkdir('subjects')
        print('complete.')
    else:
        print('subjects directory found')

    if not os.path.isdir('sensors'):
        print('creating sensors directory...')
        os.mkdir('sensors')
        print('complete.')
    else:        
        print('sensors directory found')
        
    if not os.path.isdir('stimuli'):
        print('creating stimuli directory...')
        os.mkdir('stimuli')
        print('complete.')
    else:
        print('stimuli directory found')
        
    if not os.path.isdir('sessions'):
        print('creating sessions directory...')
        os.mkdir('sessions')
        print('complete.')
    else:
        print('sessions directory found')

    if not os.path.isdir('src'):
        print('creating src directory...')
        os.mkdir('src')
        print('complete.')
    else:
        print('src directory found')
